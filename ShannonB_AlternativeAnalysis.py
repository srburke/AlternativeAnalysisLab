# -*- coding: utf-8 -*-
"""ShannonB_AlternativeAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1th9fgpUjMF33YqAo1Z0A457iOT0RwSwH
"""

import pandas as pd
import math

#create a dataframe for our alternative analysis matrix
AA=pd.DataFrame(columns=['criteria', 'weight', 'ratingA', 'ratingB', 'scoreA', 'scoreB'])
print(AA)

#first step: add a list of criteria
AA['criteria']=['risk', 'ROI', 'customerSatisfaction', 'feasibility', 'strategicAlignment']
print(AA)

#second step: identify weights
#weights show relative importance of each criterion
#they must add up to 1 (or 100 if you use percentages)
AA['weight']=[0.1,0.15,0.3,.15,.3]
print(AA)

# step 3: rate each alternative across all criteria
# choose a scale: 1-5 or 1-7 or 1-10
# higher number: an alternative is doing better regarding a given criterion

AA['ratingA']=[4,1,2,1,5]
AA['ratingB']=[3,4,2,3,2]

# step 4: calculate partial scores by multiplying weight * ratings
# using interrows is a bad idea - called an anti pattern
for index, row in AA.iterrows():
  AA['scoreA'][index]=row['ratingA']*row['weight']
  AA['scoreB'][index]=row['ratingB']*row['weight']


print(AA)

# step 5: add partial scores to get the total scores
# which solution is the winner? the one with the highest total score
totalScoreA=0
totalScoreB=0
for index, row in AA.iterrows():
  totalScoreA+=row['scoreA']
  totalScoreB+=row['scoreB']

print ('the total score for A is {:.2f} and for B is {:.2f}'.format(totalScoreA, totalScoreB))